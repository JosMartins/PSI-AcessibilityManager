#!/usr/bin/env node

/**
 * Módulo de dependências
 */

let app = require('../app');
let http = require('http');

/**
 * Obter a porta do ambiente e armazenar no Express
 */

let port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Criar servidor HTTP.
 */

let server = http.createServer(app);

/**
 * Escute na porta fornecida, em todas as interfaces de rede
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normaliza uma porta em um número, string ou falso.
 */

function normalizePort(val) {
  let port = parseInt(val, 10);

  if (isNaN(port)) {
    // Nome do canal 
    return val;
  }

  if (port >= 0) {
    // Número da porta
    return port;
  }

  return false;
}

/**
 * Lidar com erros no servidor.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  let bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

    
  // Tratar erros específicos com mensagens úteis
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Ouvir eventos do servidor HTTP.
 */

function onListening() {
  let addr = server.address();
  let bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
    console.log('Servidor em execução em ' + bind);
  }
